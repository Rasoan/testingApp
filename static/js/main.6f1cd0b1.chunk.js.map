{"version":3,"sources":["components/ModalWindow/ModalWindow.module.scss","store/Form.js","components/Form/Form.jsx","components/Form/index.js","components/ModalWindow/ModalWindow.jsx","components/ModalWindow/index.js","pages/MainPage/index.js","pages/MainPage/MainPage.jsx","components/App/index.js","components/App/App.jsx","index.js","components/Form/Form.module.scss"],"names":["module","exports","modalVisibility","state","name","surname","makeAutoObservable","this","flag","Form","props","setDataForm","validationSchema","Yup","shape","required","useForm","mode","resolver","yupResolver","register","formState","handleSubmit","errors","touchedFields","className","style","formContainer","onSubmit","formSubmit","wrapperElementForm","headerForm","headerInput","placeholder","input","inCorrect","correct","type","promptForm","message","button","FormCOntainer","observer","data","FormStore","setState","toggleModal","ModalWindow","closeModalWindow","upHandler","key","React","useEffect","autorun","window","addEventListener","onClick","modalWrapper","modalContainer","itemContainerButtonClose","buttonClose","modalHeader","itemContainer","item","okModalWindow","ModalWindowContainer","MainPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f1cd0b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"ModalWindow_modalWrapper__3-xDf\",\"modalContainer\":\"ModalWindow_modalContainer__jNk-l\",\"modalHeader\":\"ModalWindow_modalHeader__2Opy0\",\"itemContainer\":\"ModalWindow_itemContainer__2mO2B\",\"item\":\"ModalWindow_item__1w7Py\",\"buttonClose\":\"ModalWindow_buttonClose__2B1-N\",\"okModalWindow\":\"ModalWindow_okModalWindow__2n526\"};","import {makeAutoObservable, makeObserver} from \"mobx\";\r\nclass FormStore {\r\n  modalVisibility = false;\r\n  state = {\r\n    name: \"null\",\r\n    surname: \"null\",\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setState(name, surname) {\r\n    this.state.name = name;\r\n    this.state.surname = surname;\r\n  }\r\n\r\n  toggleModal(flag) {\r\n    this.modalVisibility = flag;\r\n  }\r\n}\r\n\r\nexport default new FormStore();","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Form.module.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport FormStore from \"../../store/Form\";\r\n\r\n\r\nconst Form = (props) => {\r\n  const {setDataForm} = props;\r\n  \r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n              .required('Поле обязательно для заполнения.'),\r\n    surname: Yup.string()\r\n                 .required('Поле обязательно для заполнения.'),\r\n  });\r\n\r\n  const { register, formState, handleSubmit } = useForm({\r\n      mode: 'onBlur',\r\n      resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n  const {errors, touchedFields} = formState;\r\n\r\n    return (\r\n      <div className={style.formContainer}>\r\n        <form onSubmit={handleSubmit(setDataForm)} className={style.formSubmit}>\r\n          <div className={style.wrapperElementForm}>\r\n            <h2 className={style.headerForm}>Формочка</h2>\r\n          </div>\r\n          <p className={style.headerInput}>Введите вашу фамилию</p>\r\n          <div className={style.wrapperElementForm}>\r\n            <input placeholder=\"Фамилия\"\r\n                   className={style.input + \" \" + (errors.surname && style.inCorrect ||touchedFields.surname && style.correct || \"\")}\r\n                   type=\"text\"\r\n                   {...register(\"surname\")} />\r\n                   {errors.surname && <p className={style.promptForm}>{errors.surname.message}</p>}\r\n          </div>\r\n          <p className={style.headerInput}>Введите ваше имя</p>\r\n          <div className={style.wrapperElementForm}>\r\n            <input placeholder=\"Имя\"\r\n                   type=\"text\"\r\n                   className={style.input + \" \" + (errors.name && style.inCorrect ||touchedFields.name && style.correct || \"\")}\r\n                   {...register(\"name\")} />\r\n                   {errors.name && <p className={style.promptForm}>{errors.name.message}</p>}\r\n          </div>\r\n          <div className={style.wrapperElementForm}>\r\n            <button className={style.button}>Готово</button>\r\n          </div>\r\n        </form>\r\n        </div>\r\n      );\r\n}\r\n\r\nForm.propTypes = {\r\n  // captchaUrl: PropTypes.string.isRequired,\r\n  // handleRegistration: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport FormStore from \"../../store/Form\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst FormCOntainer = observer(() => {\r\n\r\n  const setDataForm = (data) => {\r\n    FormStore.setState(data.name, data.surname);\r\n    FormStore.toggleModal(true);\r\n  }\r\n\r\n  \r\n  return <Form setDataForm={setDataForm} />;\r\n});\r\n\r\nexport default FormCOntainer;","import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ModalWindow.module.scss\";\r\nimport { autorun } from 'mobx'\r\n\r\n\r\n\r\nconst ModalWindow = (props) => {\r\n    const {closeModalWindow, name, surname} = props;\r\n    const upHandler = ({key}) => {\r\n      if(key === \"Escape\" || key === \"Enter\") closeModalWindow();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      autorun(() => {\r\n        window.addEventListener(\"keyup\", upHandler);\r\n      });\r\n    },[])\r\n\r\n    return (\r\n      <>\r\n      <div onClick={closeModalWindow} className={style.modalWrapper}></div>\r\n      <div className={style.modalContainer}>\r\n        <div className={style.itemContainerButtonClose}>\r\n          <button onClick={closeModalWindow} className={style.buttonClose}>X</button>\r\n        </div>\r\n        <h1 className={style.modalHeader}>Привет!</h1>\r\n        <div className={style.itemContainer}>\r\n          <p className={style.item}>{surname}</p>\r\n        </div>\r\n        <div className={style.itemContainer}>\r\n          <p className={style.item}>{name}</p>\r\n        </div>\r\n          <button onClick={closeModalWindow} className={style.okModalWindow}>Ok</button>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","import React from \"react\";\r\nimport ModalWindow from \"./ModalWindow\";\r\nimport FormStore from \"../../store/Form\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ModalWindowContainer = observer((props) => {\r\n    const closeModalWindow = () => {\r\n      FormStore.toggleModal(false);\r\n    }\r\n\r\n    if (!FormStore.modalVisibility) return null;\r\n\r\n    return <ModalWindow closeModalWindow={closeModalWindow}\r\n                        name={FormStore.state.name}\r\n                        surname={FormStore.state.surname} />\r\n});\r\n\r\nexport default ModalWindowContainer;","import MainPage from \"./MainPage\";\r\nexport default MainPage;","import React from \"react\";\r\nimport Form from \"../../components/Form\";\r\nimport ModalWindow from \"../../components/ModalWindow\";\r\n\r\nconst MainPage = (props) => {\r\n  return (\r\n    <>\r\n      <ModalWindow />\r\n      <Form />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainPage;","import App from \"./App\";\r\nexport default App;","import React from \"react\";\r\nimport MainPage from \"../../pages/MainPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <MainPage />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from '../src/components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Form_formContainer__uZoTS\",\"formSubmit\":\"Form_formSubmit__b-dRE\",\"headerForm\":\"Form_headerForm__20YWI\",\"promptForm\":\"Form_promptForm__2y3jI\",\"wrapperElementForm\":\"Form_wrapperElementForm__31DYP\",\"wrapperButton\":\"Form_wrapperButton__26AqV\",\"input\":\"Form_input__2Fwtu\",\"headerInput\":\"Form_headerInput__161CY\",\"button\":\"Form_button__1hqJT\",\"default\":\"Form_default__3057l\",\"correct\":\"Form_correct__2Egud\",\"inCorrect\":\"Form_inCorrect__Efa9V\",\"inCorrectSubmitDataHint\":\"Form_inCorrectSubmitDataHint__zzQF8\"};"],"sourceRoot":""}